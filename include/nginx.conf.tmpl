worker_processes auto;

user root root;
pid /run/nginx.pid;

events {
    worker_connections 4096;
    use                epoll;
    multi_accept       on;
}

http {
    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    include      mime.types;
    default_type application/octet-stream;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA';


    gzip         on;
    gzip_disable "msie6";

    client_max_body_size 8M;

    server {
        include common.conf;
		auth_basic           "Restricted";
        auth_basic_user_file /etc/nginx/.htpasswd;
        server_name #server_name#;

        location / {
			#start_glances
			if ($http_referer ~ "^https?://[^/]+/glances"){
				rewrite ^/(.*) /glances/$1 redirect;
			}
			#end_glances
			#start_cloud
			if ($http_referer ~ "^https?://[^/]+/cloud"){
				rewrite ^/(.*) /cloud/$1 redirect;
			}
			#end_cloud


            root /var/www;
        }

		#start_rtorrent
    location /rtorrent/ {
        fastcgi_pass_header Authorization;
        include fastcgi_params;
		include proxy_params;

        rewrite /rtorrent/(.*) /$1 break;

		proxy_pass https://seedboxdocker_rtorrent_1:443;

    }
#end_rtorrent

#start_sickrage
    location /sickrage {
        include proxy_params;
        #sickrage_conf#
    }
#end_sickrage



#start_plex
    location /web {
        proxy_pass http://seedboxdocker_plex_1:32400;
        include proxy_params;
    }

    location /plex {
        proxy_pass http://seedboxdocker_plex_1:32400/web;
    }
#end_plex

#start_emby
    location /emby {
        proxy_pass http://emby;
        include proxy_params;
    }
#end_emby

#start_limbomedia
    location /limbomedia {
		include proxy_params;
        rewrite /limbomedia/(.*) /$1 break;
        proxy_pass http://limbomedia;
    }
#end_limbomedia#

#start_cloud
    location /cloud/ {
        rewrite /cloud/(.*) /$1 break;
        proxy_pass http://seedboxdocker_cloud:8000/;
        include proxy_params;
    }
#end_cloud

#start_headphones
    location /headphones {
        proxy_pass http://headphones;
        include proxy_params;
    }
#end_headphones

#start_couchpotato
    location /couchpotato {
        #couchpotato_conf#
        include proxy_params;
    }
#end_couchpotato

#start_muximux
    location /muximux/ {
        proxy_pass http://seedboxdocker_muximux_1/;
        include proxy_params;
    }
#end_muximux

#start_glances
    location /glances/ {
        rewrite /glances/(.*) /$1 break;
        proxy_pass http://seedboxdocker_glances_1:61208/;
        include proxy_params;
    }
#end_glances

#start_syncthing
    location /syncthing/ {
        proxy_pass http://seedboxdocker_syncthing_1:8384/;
        include proxy_params;
    }
#end_syncthing

#start_plexpy
    location /plexpy {
        proxy_pass http://seedboxdocker_plexpy_1:8181;
        include proxy_params;
    }
#end_plexpy

#start_jackett
    location /jackett {
        proxy_pass http://jackett:9117;
        include proxy_params;
    }
#end_jackett

#start_htpcmanager
    location /htpc {
        proxy_pass http://tool_HTPCManager:8085;
        include proxy_params;
    }
#end_htpcmanager

#start_mylar
    location /mylar {
        proxy_pass http://autodl-comics_mylar:8090;
        include proxy_params;
    }
#end_mylar

#start_radarr
    location /radarr {
        proxy_pass http://autodl-movies_radarr:7878;
        include proxy_params;
    }
#end_radarr

#start_ubooquity
    location /ubooquity {
        proxy_pass http://stream-comics_ubooquity:2202;
        include proxy_params;
    }
#end_ubooquity

#start_libresonic
    location /libresonic {
        proxy_pass http://stream-music_libresonic:4040;
        include proxy_params;
    }
#end_libresonic

#start_portainer
    location /portainer/ {
      include proxy_params;
      proxy_set_header Connection "";
      proxy_pass http://seedboxdocker_portainer_1:9000/;

    }
    location /portainer/api/websocket/ {
      include proxy_params;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_pass http://seedboxdocker_portainer_1:9000/api/websocket/;

    }
#end_portainer

#start_elfinder
    location /elfinder/ {
        
        proxy_pass http://seedboxdocker_elfinder_1/;
        include proxy_params;
    }
#end_elfinder

#start_butterfly
   location /butterfly {
    
    rewrite ^/butterfly/?(.*) /$1 break;
    proxy_pass http://seedboxdocker_butterfly_1:57575;

    include proxy_params;

    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";

    subs_filter_types text/html text/css text/xml application/javascript;
    subs_filter /style.css '/butterfly/style.css';
    subs_filter /static '/butterfly/static';
    subs_filter /ws '/butterfly/ws';
    subs_filter location.pathname '"/"';
    }
#end_butterfly

    location /nginx_status {
        stub_status on;
        access_log off;
    }
    }
#start_rtorrent
	upstream rtorrent {
        server seedboxdocker_rtorrent_1;
    }
	upstream rS {
        server seedboxdocker_rtorrent_1:443;
    }

#end_rtorrent



#start_emby
	upstream emby {
        server emby:8096;
    }

#end_emby
#start_limbomedia
	upstream limbomedia {
        server limbomedia:8000;
    }

#end_limbomedia
#start_headphones
	upstream headphones {
        server seedboxdocker_headphones_1:8181;
    }

#end_headphones



#start_explorer
	upstream explorer {
        server seedboxdocker_explorer_1:4859;
    }
    server {
        include common.conf;
        server_name ~^(explorer)(\.\w+)+$;

        auth_basic           "Restricted";
        auth_basic_user_file /etc/nginx/.htpasswd;
        location / {
            proxy_pass http://explorer;
        }
    }
#end_explorer
#start_filemanager
	upstream filemanager {
        server seedboxdocker_filemanager_1;
    }
	server {
        include common.conf;
        server_name ~^(files)(\.\w+)+$;

        auth_basic           "Restricted";
        auth_basic_user_file /etc/nginx/.htpasswd;
        location / {
            proxy_pass http://filemanager;
        }
    }
#end_filemanager


}

# vim: ft=nginx
